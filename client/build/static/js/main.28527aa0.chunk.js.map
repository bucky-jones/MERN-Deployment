{"version":3,"sources":["logo.svg","components/DeleteButton.js","components/ExamList.js","views/Main.js","components/ExamForm.js","views/AddExam.js","components/ErrorExam.js","views/DetailExam.js","views/EditExam.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","props","examId","successCallback","useState","exam","setExam","useEffect","console","log","id","axios","get","then","res","data","onClick","e","delete","className","name","map","idx","key","type","to","_id","exams","setExams","loaded","setLoaded","ExamList","initialName","initialType","initialDescription","initialSkill_One","initialSkill_Two","initialSkill_Three","onSubmitProp","setName","setType","description","setDescription","skill_one","setSkill_One","skill_two","setSkill_Two","skill_three","setSkill_Three","onSubmit","preventDefault","value","onChange","target","class","errors","setErrors","err","index","ExamForm","post","navigate","catch","errorResponse","response","errorArr","Object","keys","push","message","initialDescrption","ErrorExam","DeleteButton","put","App","Main","path","AddExam","DetailExam","EditExam","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.28527aa0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\n\r\nexport default props => {\r\n    const { examId, successCallback } = props;\r\n\r\n    const [exam, setExam] = useState({})\r\n    useEffect(() => {\r\n        console.log(\"Props ID\", props.id)\r\n        axios.get(\"http://localhost:8000/api/exam/\" + props.id)\r\n            \r\n            .then(res => setExam(res.data))\r\n            console.log(\"Props is \",props);\r\n            console.log(\"The product is \",exam);\r\n    }, [])\r\n    const deleteExam = e => {\r\n        axios.delete('http://localhost:8000/api/exam/' + examId)\r\n            .then(res=>{\r\n                successCallback();\r\n            })\r\n    }\r\n    return (\r\n        <button onClick={deleteExam} className=\"btn btn-danger border border-dark ml-2\">Adopt {exam.name}</button>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link, navigate } from '@reach/router';\r\nimport axios from 'axios';\r\nimport DeleteButton from './DeleteButton';\r\nimport EditButton from './EditButton';\r\n\r\nexport default props => {\r\n    const [exam, setExam] = useState([]);\r\n    useEffect(() => {\r\n        axios.get('http://localhost:8000/api/exam')\r\n            .then(res => setExam(res.data));\r\n    }, [])\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row d-block text-left bg-white\">\r\n                <table className=\"table table-striped table-bordered border bg-secondary border-dark table-hover table-sm mt-2\">\r\n                    <thead className=\"thead-dark text-center border border-dark\">\r\n                        <tr className=\"border border-dark \">\r\n                            <th>Name</th>\r\n                            <th>Type</th>\r\n                            <th>Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    \r\n                        {exam.map((exam, idx)=>{\r\n                            return <tr key={idx} >\r\n                                <td className=\"text-light\">\r\n                                    <p>{exam.name}</p>\r\n                                </td>\r\n                                <td className=\"text-light\">\r\n                                    <p>{exam.type}</p>\r\n                                </td>\r\n                                <td className=\"text-center justify-content-center d-flex\">\r\n                                    <p className=\"text-primary\"><Link className=\"text-light\" to={\"/detail/\" + exam._id }>Details </Link></p>\r\n                                    <p> | </p>\r\n                                    <p className=\" text-primary\"><Link className=\"text-light\" to={\"/edit/\" + exam._id }> Edit</Link></p>\r\n                                </td>\r\n                            </tr>\r\n                        })}\r\n                    \r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport { Link, navigate } from '@reach/router';\r\nimport ExamList from '../components/ExamList';\r\nexport default () => {\r\n    const [exams, setExams] = useState([]);\r\n    const [loaded, setLoaded] = useState(false);\r\n    \r\n    useEffect(()=>{\r\n        axios.get('http://localhost:8000/api/exam')\r\n            .then(res=>{\r\n                console.log(\"Res data is \",res.data);\r\n                setExams(res.data);\r\n                setLoaded(true);\r\n            });\r\n    },[loaded])\r\n    \r\n    return (\r\n        \r\n        <div className=\"text-left \">\r\n            <div className=\"row d-flex ml-1 justify-content-between mr-1\">\r\n                <h1>Pet Shelter</h1>\r\n                <p><Link className=\"text-primary\" to ={'/new'}>add a pet to the shelter</Link> </p>\r\n            </div>\r\n            <h3>These are the pets looking for a home?</h3>\r\n           {loaded && <ExamList exam={exams} />}\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport { Link, navigate } from '@reach/router';\r\nimport axios from 'axios';\r\nexport default props => {\r\n    //keep track of what is being typed via useState hook\r\n    const { initialName, initialType, initialDescription, initialSkill_One, initialSkill_Two, initialSkill_Three, onSubmitProp } = props;\r\n    const [name, setName] = useState(initialName);\r\n    const [type, setType] = useState(initialType);\r\n    const [description, setDescription] = useState(initialDescription);\r\n    const [skill_one, setSkill_One] = useState(initialSkill_One);\r\n    const [skill_two, setSkill_Two] = useState(initialSkill_Two);\r\n    const [skill_three, setSkill_Three] = useState(initialSkill_Three);\r\n\r\n    const onClickHandler2 = event => {\r\n        event.preventDefault();\r\n        navigate('/');\r\n    }\r\n    \r\n    //handler when the form is submitted\r\n    const onSubmitHandler = e => {\r\n        //prevent default behavior of the submit\r\n        e.preventDefault();\r\n        onSubmitProp({name, type, description, skill_one, skill_two, skill_three})\r\n    }\r\n    \r\n    return (\r\n        <div className=\"container bg-white\">\r\n            <div className=\"row d-block border border-dark text-left bg-white\" >\r\n                <form className=\"mx-auto\" onSubmit={onSubmitHandler}>\r\n                    <p>\r\n                        <label>Name: </label><br/>\r\n                        <input type=\"text\" name=\"name\" value={name} onChange = {(e)=>setName(e.target.value)}/>\r\n                    </p>\r\n                    <p>\r\n                        <label>Type: </label><br/>\r\n                        <input type=\"text\" name=\"type\" value={type} onChange = {(e)=>setType(e.target.value)}/>\r\n                    </p>\r\n                    <p>\r\n                        <label>Description: </label><br/>\r\n                        <input type=\"text\" name=\"description\" value={description} onChange = {(e)=>setDescription(e.target.value)}/>\r\n                    </p>\r\n                    <p>Skills Optional: </p>\r\n                    <p>\r\n                        <label>Skill One: </label><br/>\r\n                        <input type=\"text\" name=\"skill_one\" value={skill_one} onChange = {(e)=>setSkill_One(e.target.value)}/>\r\n                    </p>\r\n                    <p>\r\n                        <label>Skill Two: </label><br/>\r\n                        <input type=\"text\" name=\"skill_two\" value={skill_two} onChange = {(e)=>setSkill_Two(e.target.value)}/>\r\n                    </p>\r\n                    <p>\r\n                        <label>Skill Three: </label><br/>\r\n                        <input type=\"text\" name=\"skill_three\" value={skill_three} onChange = {(e)=>setSkill_Three(e.target.value)}/>\r\n                    </p>\r\n                    \r\n                    <input type=\"submit\" value=\"Add Pet\" class=\"btn btn-primary border border-dark ml-2\"/>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport { Link, navigate } from '@reach/router';\r\nimport ExamForm from '../components/ExamForm';\r\nexport default () => {\r\n    const [exams, setExams] = useState([]);\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [errors, setErrors] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        axios.get('http://localhost:8000/api/exam')\r\n            .then(res=>{\r\n                console.log(\"Res data is \",res.data);\r\n                setExams(res.data);\r\n                setLoaded(true);\r\n            });\r\n    },[loaded])\r\n\r\n    const createExam = exam => {\r\n        axios.post('http://localhost:8000/api/exam/new', exam)\r\n            .then(res=>{\r\n                setExams([...exams, res.data]);\r\n                setLoaded(false);\r\n                navigate('/');\r\n            })  \r\n            .catch(err=>{\r\n            const errorResponse = err.response.data.errors; // Get the errors from err.response.data\r\n            const errorArr = []; // Define a temp error array to push the messages in\r\n            for (const key of Object.keys(errorResponse)) { // Loop through all errors and get the messages\r\n                errorArr.push(errorResponse[key].message)\r\n            }\r\n            // Set Errors\r\n            setErrors(errorArr);\r\n            })      \r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row d-block text-left bg-white\">\r\n            <div className=\"row d-flex ml-1 justify-content-between mr-1\">\r\n                <h1>Pet Shelter</h1>\r\n                <p><Link className=\"text-primary\" to ={'/'}>back to home</Link> </p>\r\n            </div>\r\n            <h3>Know a pet needing a home?</h3>\r\n            {errors.map((err, index) => <p className=\"text-danger\" key={index}>{err}</p>)}\r\n            <ExamForm onSubmitProp={createExam} initialName=\"\" initialType=\"\" initialDescrption=\"\" initialSkill_One=\"\" initialSkill_Two=\"\" initialSkill_Three=\"\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link, navigate } from '@reach/router';\r\n\r\nexport default props => {\r\n\r\n    return (\r\n        <div>\r\n            <h3>We're sorry. We could not the pet you're looking for. Would you like to add a pet?</h3>\r\n            <h3><Link class=\"text-primary\" to ='/new'> Add Pet </Link></h3>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport { Link, navigate } from '@reach/router';\r\nimport ErrorExam from '../components/ErrorExam';\r\nimport DeleteButton from '../components/DeleteButton';\r\nimport EditButton from '../components/EditButton';\r\n\r\nexport default props => {\r\n    const [exam, setExam] = useState({})\r\n    useEffect(() => {\r\n        console.log(\"Props ID\", props.id)\r\n        axios.get(\"http://localhost:8000/api/exam/\" + props.id)\r\n            \r\n            .then(res => setExam(res.data))\r\n            console.log(\"Props is \",props);\r\n            console.log(\"The product is \",exam);\r\n    }, [])\r\n\r\n    const removeFromDom = examId => {\r\n        console.log(\"Removing from DOM\")\r\n        axios.get('http://localhost:8000/api/exam')\r\n            .then(res => setExam(res.data));\r\n            navigate('/');\r\n        \r\n    }\r\n\r\n    if (typeof exam._id === 'undefined'){\r\n        return (\r\n            <div>\r\n                <ErrorExam/> \r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            \r\n            <div className=\"row d-flex ml-1 justify-content-between mr-1\">\r\n                <h1>Pet Shelter</h1>\r\n                <p><Link className=\"text-primary\" to ={'/'}>back to home</Link> </p>\r\n            </div>\r\n            <div className=\"row d-flex ml-1 justify-content-between mr-1\">\r\n                <h3>Details about: {exam.name}</h3>\r\n                <DeleteButton examId={exam._id} successCallback={removeFromDom}/>\r\n            </div>\r\n            <div className=\"row d-block border border-dark text-left ml-1 bg-white\">\r\n                <p>Type: {exam.type}</p>\r\n                <p>Description: {exam.description}</p>\r\n                <ul><p>Skills: </p>\r\n                    <li>{exam.skill_one}</li>\r\n                    <li>{exam.skill_two}</li>\r\n                    <li>{exam.skill_three}</li>\r\n                </ul> \r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport { Link, navigate } from '@reach/router';\r\nimport ExamForm from '../components/ExamForm';\r\nimport ErrorExam from '../components/ErrorExam';\r\n\r\nexport default props => {\r\n    const { id } = props;\r\n    const [exam, setExam] = useState([]);\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [errors, setErrors] = useState([]);\r\n    \r\n    useEffect(()=>{\r\n        axios.get('http://localhost:8000/api/exam/' + id)\r\n            .then(res=>{\r\n                console.log(\"Res data is \",res.data);\r\n                setExam(res.data);\r\n                setLoaded(true); \r\n            });\r\n    },[])\r\n\r\n    const updateExam = exam => {\r\n        axios.put('http://localhost:8000/api/exam/' + id, exam)\r\n            .then(res => {navigate('/')})\r\n             \r\n            .catch(err=>{\r\n                const errorResponse = err.response.data.errors; // Get the errors from err.response.data\r\n                const errorArr = []; // Define a temp error array to push the messages in\r\n                for (const key of Object.keys(errorResponse)) { // Loop through all errors and get the messages\r\n                    errorArr.push(errorResponse[key].message)\r\n                }\r\n                // Set Errors\r\n                setErrors(errorArr);\r\n                })\r\n    }\r\n    console.log(\"Book ID \",exam._id)\r\n\r\n    if (typeof exam._id === 'undefined'){\r\n        return (\r\n            <div>\r\n                <ErrorExam/> \r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row d-block text-left bg-white\">\r\n            <div className=\"row d-flex ml-1 justify-content-between mr-1\">\r\n                <h1>Pet Shelter</h1>\r\n                <p><Link className=\"text-primary\" to ={'/'}>back to home</Link> </p>\r\n            </div>\r\n            <h3>Edit {exam.name}</h3>\r\n                {errors.map((err, index) => <p className=\"text-danger\" key={index}>{err}</p>)}\r\n                {loaded && (\r\n                    <> \r\n                        <ExamForm \r\n                            onSubmitProp={updateExam} \r\n                            initialName={exam.name} \r\n                            initialType={exam.type} \r\n                            initialDescription={exam.description} \r\n                            initialSkill_One={exam.skill_one} \r\n                            initialSkill_Two={exam.skill_two} \r\n                            initialSkill_Three={exam.skill_three} \r\n                        /> \r\n                    </>\r\n                )}\r\n            </div> \r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport logo from './logo.svg';\nimport { Router } from '@reach/router';\nimport { Link, navigate } from '@reach/router';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Main from './views/Main';\nimport AddExam from './views/AddExam';\nimport DetailExam from './views/DetailExam';\nimport EditExam from './views/EditExam';\n\nfunction App() {\n  return (\n    <div className=\"container \">\n      <div className=\"row border border-dark d-block mt-3\">\n        <Router >\n          <Main path=\"/\"/>\n          <AddExam path=\"/new\"/>\n          <DetailExam path=\"/detail/:id\"/>\n          <EditExam path=\"/edit/:id\"/>\n          \n        </Router>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}